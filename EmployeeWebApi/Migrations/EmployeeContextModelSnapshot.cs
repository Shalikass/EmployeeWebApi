// <auto-generated />
using System;
using EmployeeWebApi.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeWebApi.Migrations
{
    [DbContext(typeof(EmployeeContext))]
    partial class EmployeeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("EmployeeWebApi.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("BossId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CurrentSalary")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EmploymentDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("HomeAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bb8f7d67-9e90-426c-a776-bc1ff87d2225"),
                            BirthDate = new DateTime(1995, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BossId = new Guid("430b0fd2-4470-469e-9a89-0d19c0e639a2"),
                            CurrentSalary = 2450m,
                            EmploymentDate = new DateTime(2000, 8, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Vytas",
                            HomeAddress = "Lithuania\r\n Vilnius, Gelezinio vilko g. 24",
                            LastName = "Schmytas",
                            RoleId = new Guid("bc89ba1f-8873-413d-94a1-316e0b79624d")
                        },
                        new
                        {
                            Id = new Guid("430b0fd2-4470-469e-9a89-0d19c0e639a2"),
                            BirthDate = new DateTime(1993, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            BossId = new Guid("0ac8137c-30f4-4441-a653-a79f59f6c96c"),
                            CurrentSalary = 2300m,
                            EmploymentDate = new DateTime(1994, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jonas",
                            HomeAddress = "Lithuania\r\n Klaipeda, Kranto g. 16A",
                            LastName = "Babonas",
                            RoleId = new Guid("b4058a62-21e7-4e5e-8ad1-f745e484f733")
                        },
                        new
                        {
                            Id = new Guid("0ac8137c-30f4-4441-a653-a79f59f6c96c"),
                            BirthDate = new DateTime(1986, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentSalary = 3000m,
                            EmploymentDate = new DateTime(2022, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Egle",
                            HomeAddress = "Latvia\r\n Riga, Mieto pr. 18-4",
                            LastName = "Megle",
                            RoleId = new Guid("80573d10-ee54-45f9-b93c-dad35adf5990")
                        });
                });

            modelBuilder.Entity("EmployeeWebApi.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80573d10-ee54-45f9-b93c-dad35adf5990"),
                            Description = "Big booss",
                            Name = "CEO"
                        },
                        new
                        {
                            Id = new Guid("bc89ba1f-8873-413d-94a1-316e0b79624d"),
                            Name = "Developer"
                        },
                        new
                        {
                            Id = new Guid("b4058a62-21e7-4e5e-8ad1-f745e484f733"),
                            Description = "Manages stuff",
                            Name = "Manager"
                        });
                });

            modelBuilder.Entity("EmployeeWebApi.Entities.Employee", b =>
                {
                    b.HasOne("EmployeeWebApi.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
